game:GetService("Players").LocalPlayer.Idled:Connect(function()
	game:GetService("VirtualUser"):CaptureController()
	game:GetService("VirtualUser"):ClickButton1(Vector2.new())
	game:GetService("VirtualUser"):ClickButton2(Vector2.new())
end)

for _, portal in pairs(game:GetDescendants()) do
	if portal.Name == "RobloxForwardPortals" then
		portal:Destroy()
	end
end

game.DescendantAdded:Connect(function(descendant)
	if descendant.Name == "RobloxForwardPortals" then
		descendant:Destroy()
	end
end)

local VirtualUser = game:GetService('VirtualUser')
game:GetService('Players').LocalPlayer.Idled:Connect(function()
	VirtualUser:CaptureController()
	VirtualUser:ClickButton2(Vector2.new())
end)

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local CoreGui = game:GetService("CoreGui")

local LP = Players.LocalPlayer
local killingConnection
_G.fastHitActive = false
local whitelist = {}
local isHitting = false
local GuiVisible = true
local parts = {}
local partSize = 2048
local totalDistance = 50000
local startPosition = Vector3.new(-2, - 9.5, -2)
local numberOfParts = math.ceil(totalDistance / partSize)
local rockOriginal
local rockSize
local rockConnection
local function createParts()
	for x = 0, numberOfParts - 1 do
		for z = 0, numberOfParts - 1 do
			local newPartSide = Instance.new("Part")
			newPartSide.Size = Vector3.new(partSize, 1, partSize)
			newPartSide.Position = startPosition + Vector3.new(x * partSize, 0, z * partSize)
			newPartSide.Anchored = true
			newPartSide.Transparency = 1
			newPartSide.CanCollide = true
			newPartSide.Name = "Part_Side_" .. x .. "_" .. z
			newPartSide.Parent = workspace
			table.insert(parts, newPartSide)
			local newPartLeftRight = Instance.new("Part")
			newPartLeftRight.Size = Vector3.new(partSize, 1, partSize)
			newPartLeftRight.Position = startPosition + Vector3.new(- x * partSize, 0, z * partSize)
			newPartLeftRight.Anchored = true
			newPartLeftRight.Transparency = 1
			newPartLeftRight.CanCollide = true
			newPartLeftRight.Name = "Part_LeftRight_" .. x .. "_" .. z
			newPartLeftRight.Parent = workspace
			table.insert(parts, newPartLeftRight)
			local newPartUpLeft = Instance.new("Part")
			newPartUpLeft.Size = Vector3.new(partSize, 1, partSize)
			newPartUpLeft.Position = startPosition + Vector3.new(- x * partSize, 0, - z * partSize)
			newPartUpLeft.Anchored = true
			newPartUpLeft.Transparency = 1
			newPartUpLeft.CanCollide = true
			newPartUpLeft.Name = "Part_UpLeft_" .. x .. "_" .. z
			newPartUpLeft.Parent = workspace
			table.insert(parts, newPartUpLeft)
			local newPartUpRight = Instance.new("Part")
			newPartUpRight.Size = Vector3.new(partSize, 1, partSize)
			newPartUpRight.Position = startPosition + Vector3.new(x * partSize, 0, - z * partSize)
			newPartUpRight.Anchored = true
			newPartUpRight.Transparency = 1
			newPartUpRight.CanCollide = true
			newPartUpRight.Name = "Part_UpRight_" .. x .. "_" .. z
			newPartUpRight.Parent = workspace
			table.insert(parts, newPartUpRight)
		end
	end
end

local function makePartsWalkthrough()
	for _, part in ipairs(parts) do
		if part and part.Parent then
			part.CanCollide = false
		end
	end
end

local function makePartsSolid()
	for _, part in ipairs(parts) do
		if part and part.Parent then
			part.CanCollide = true
		end
	end
end

local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/EpicDeevv/eEe/refs/heads/main/EeeE", true))()

local window = library:AddWindow("Omega | PAID", {
    main_color = Color3.fromRGB(0,0,0),
    min_size = Vector2.new(520,600),
    can_resize = false,
})

local Killer = window:AddTab("Killing")

local killpetDropdown = Killer:AddDropdown("Select Pet", function(selection)

end)

killpetDropdown:Add("Equip ALL Wild Wizard")
killpetDropdown:Add("Equip ALL Mighty Monster")

Killer:AddSwitch("No Punch Animation", function(State)
    if State then
        game:GetService("Players").LocalPlayer.Backpack.Punch.RequiresHandle = true
    else
       game:GetService("Players").LocalPlayer.Backpack.Punch.RequiresHandle = false
    end
end)

Killer:AddLabel("")

Killer:AddTextBox("Whitelist", function(text)
		if text ~= "" then
			local valueLower = Value:lower()
			for _, player in pairs(Players:GetPlayers()) do
				if player.Name:lower() == valueLower or (player.DisplayName and player.DisplayName:lower() == valueLower) then
					whitelist[player.Name] = true
			end
		end
end)

Killer:AddButton("Clear Whitelist", function()
table.clear(whitelist)
end)

local AutoWhitelistFriends = Killer:AddSwitch("Whitelist Friends", function(State)
		getgenv().autoWhitelistFriends = State
		if State then
			for _, player in pairs(Players:GetPlayers()) do
				if player:IsFriendsWith(game.Players.LocalPlayer.UserId) then
					whitelist[player.Name] = true
				end
			end
end)

Players.PlayerAdded:Connect(function(player)
	if getgenv().autoWhitelistFriends and player:IsFriendsWith(game.Players.LocalPlayer.UserId) then
		whitelist[player.Name] = true
	end
end)

Killer:AddTextBox("Blacklist", function(playerName)

end)

Killer:AddButton("Clear Blacklist", function()
    
end)

local switch = Killer:AddSwitch("Kill List", function(v)

end)

Killer:AddSwitch("Kill All", function(v)
		getgenv().killallv2 = v
		task.spawn(function()
			while getgenv().killallv2 do
				for _, player in ipairs(game:GetService("Players"):GetPlayers()) do
					if player ~= game.Players.LocalPlayer and not whitelist[player.Name] then
						if player.Character and player.Character:FindFirstChild("Humanoid") and player.Character.Humanoid.Health > 0 then
							killPlayer(player)
						end
					end
				end
				task.wait()
			end
		end)
end)
